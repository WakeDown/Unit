//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitDashboard.App_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBPageOptionsEntities : DbContext
    {
        public DBPageOptionsEntities()
            : base("name=DBPageOptionsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BlockOptions> BlockOptions { get; set; }
    
        public virtual int Delete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete");
        }
    
        public virtual int DeleteId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteId", idParameter);
        }
    
        public virtual int DeleteValue(Nullable<int> value)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteValue", valueParameter);
        }
    
        public virtual int Insert(string content, string type)
        {
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert", contentParameter, typeParameter);
        }
    
        public virtual int Len(ObjectParameter len)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Len", len);
        }
    
        public virtual ObjectResult<Procedure_Result> Procedure(Nullable<int> param1, Nullable<int> param2)
        {
            var param1Parameter = param1.HasValue ?
                new ObjectParameter("param1", param1) :
                new ObjectParameter("param1", typeof(int));
    
            var param2Parameter = param2.HasValue ?
                new ObjectParameter("param2", param2) :
                new ObjectParameter("param2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure_Result>("Procedure", param1Parameter, param2Parameter);
        }
    
        public virtual ObjectResult<Select_Result> Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Result>("Select");
        }
    
        public virtual ObjectResult<SelectId_Result> SelectId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectId_Result>("SelectId", idParameter);
        }
    
        public virtual ObjectResult<SelectValue_Result> SelectValue(Nullable<int> value)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectValue_Result>("SelectValue", valueParameter);
        }
    }
}
